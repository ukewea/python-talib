name: Build Image

on:
  workflow_call:
    inputs:
      images:
        description: Passed to docker/metadata-action
        type: string
        required: true
      context:
        description: Passed to docker/build-push-action
        type: string
        required: true
      platforms:
        description: Passed to docker/build-push-action
        type: string
        required: true
      runner-labels:
        description: Runner labels
        type: string
        required: true
    outputs:
      digest:
        description: digest
        value: ${{ jobs.build.outputs.digest }}

jobs:
  build:
    runs-on: ${{ fromJson(inputs.runner-labels) }}

    permissions:
      packages: write

    timeout-minutes: 300

    outputs:
      digest: ${{ steps.build-push.outputs.digest }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ inputs.images }}
          # avoid overwriting the latest tag because metadata-action does not add a suffix to it
          flavor: latest=false

      - name: Build (no push yet)
        id: build-image
        uses: docker/build-push-action@v5
        with:
          push: false
          load: true
          context: ${{ inputs.context }}
          tags: temp-image:localtest
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ inputs.platforms }}

      - name: Smoke Test - ta-lib, numpy, pandas
        run: |
          docker run --rm temp-image:localtest /venv/bin/python -c "import pandas as pd; import talib; import numpy as np; print('All good!' if talib.SMA(np.array([1,2,3], dtype=float), timeperiod=2) is not None else 'Something\'s missing')"

      - name: Push image
        id: build-push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ inputs.context }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ inputs.platforms }}

      - name: Print the Image Digest
        run: echo "The image digest is ${{ steps.build-push.outputs.digest }}"

      - name: Remove local test image
        if: ${{ always() }}
        run: docker rmi temp-image:localtest || true
